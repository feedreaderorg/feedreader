@inject NavigationManager NavigationManager

<div class="left-side-bar">
	<div class="section">
		<ul>
			@foreach (var item in ActionItems)
			{
				<li>
					<a href="@item.TargetUri" class="@(item.IsSelected ? "selected" : "")">
						<img src="@item.ImgUri"><span>@item.Name</span>
					</a>
				</li>
			}
		</ul>
	</div>
	@if (CurrentUser.SubscribedFeeds.Count > 0)
	{
		<div class="section">
			<div class="title">MY FEEDS</div>
			<ul>
				@foreach (var feed in CurrentUser.SubscribedFeeds)
				{
					<a href="/">
						<img src="@feed.IconUri"><span>@feed.Name</span>
					</a>
				}
			</ul>
		</div>
	}
	<div class="section">
		<div class="title">TOP FEEDS</div>
		<ul>
			<li>
				<a href="/">
					<img src="img/econmy.png"><span>Economy</span>
				</a>
				<a href="/">
					<img src="img/entertainment.png"><span>Entertainment</span>
				</a>
				<a href="/">
					<img src="img/health.png"><span>Health</span>
				</a>
				<a href="/">
					<img src="img/lifestyle.png"><span>Lifestyle</span>
				</a>
				<a href="/">
					<img src="img/politics.png"><span>Politics</span>
				</a>
				<a href="/">
					<img src="img/sports.png"><span>Sports</span>
				</a>
				<a href="/">
					<img src="img/technology.png"><span>Technology</span>
				</a>
				<a href="/">
					<img src="img/more.png"><span>More</span>
				</a>
			</li>
		</ul>
	</div>
</div>

@code
{
	class ActionItem
	{
		public string TargetUri { get; set; }
		public string ImgUri { get; set; }
		public string Name { get; set; }
		public bool IsSelected { get; set; }
	}

	List<ActionItem> ActionItems { get; set; } = new List<ActionItem>();

	[CascadingParameter]
    public User CurrentUser { get; set; }

	protected override void OnInitialized()
	{
		ActionItems.Add(new ActionItem()
		{
			TargetUri = "/",
			ImgUri = "img/home.png",
			Name = "Home",
		});

		if (CurrentUser.Role == UserRole.Guest)
		{
			ActionItems.Add(new ActionItem()
			{
				TargetUri = "/login",
				ImgUri = "img/login.png",
				Name = "Login",
			});
		}
		else
		{
			ActionItems.Add(new ActionItem()
			{
				TargetUri = "/favorites",
				ImgUri = "img/favorite.png",
				Name = "My favorites",
			});

			ActionItems.Add(new ActionItem()
			{
				TargetUri = "/profile",
				ImgUri = "img/profile.png",
				Name = "My profile",
			});

			ActionItems.Add(new ActionItem()
			{
				TargetUri = "/add",
				ImgUri = "img/add.png",
				Name = "Add feed",
			});
		}

		NavigationManager.LocationChanged += OnLocationChanged;
		OnLocationChanged(null, new LocationChangedEventArgs(NavigationManager.Uri, false));
	}

	public void Dispose()
	{
		NavigationManager.LocationChanged -= OnLocationChanged;
	}

	void OnLocationChanged(object sender, LocationChangedEventArgs args)
	{
		var realPath = NavigationManager.ToBaseRelativePath(args.Location);
		var path = new PathString($"/{realPath}");
		foreach (var item in ActionItems)
		{
			item.IsSelected = path.StartsWithSegments(item.TargetUri);
		}
		StateHasChanged();
	}
}